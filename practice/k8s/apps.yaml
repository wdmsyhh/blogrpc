#apiVersion: v1
#kind: Pod
#metadata:
#  name: openapi-business
#spec:
#  # 定义容器，可以多个
#  containers:
#    - name: openapi-business # 容器名字
#      image: registry.ap-southeast-1.aliyuncs.com/yhhnamespace/blogrpc-openapi-business:local # 镜像
#      # 如果修改了 imagePullPolicy，需要删除 pod 重新创建
#      imagePullPolicy: Always # Always: 每次都重新拉取镜像。IfNotPresent（默认值）：仅当本地没有该镜像时才会拉取。Never：仅使用本地已有的镜像，不会拉取新的镜像。
#  imagePullSecrets:
#    - name: my-registry-secret-1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  # 部署名字
  name: openapi-business
spec:
  replicas: 2 #更新 pod 数量，如果 imagePullPolicy: Always，新增的使用的是远程的新镜像
  # 用来查找关联的 Pod，所有标签都匹配才行
  selector:
    matchLabels:
      app: openapi-business
  # 定义 Pod 相关数据
  template:
    metadata:
      labels:
        app: openapi-business
    spec:
      # 定义容器，可以多个
      containers:
        - name: openapi-business # 容器名字
          image: registry.ap-southeast-1.aliyuncs.com/yhhnamespace/blogrpc-openapi-business:local # 镜像
          imagePullPolicy: Always
      imagePullSecrets:
        - name: my-registry-secret-1

---
apiVersion: v1
kind: Service
metadata:
  name: openapi-business
spec:
  selector:
    app: openapi-business
  # 默认 ClusterIP 集群内可访问，NodePort 节点可访问，LoadBalancer 负载均衡模式（需要负载均衡器才可用）
  type: NodePort
  ports:
    - port: 9091        # 本 Service 的端口
      targetPort: 9091  # 容器端口
      nodePort: 31111   # 节点端口，范围固定 30000 ~ 32767

---
apiVersion: apps/v1
kind: Deployment
metadata:
  # 部署名字
  name: blogrpc-hello
spec:
  replicas: 2
  # 用来查找关联的 Pod，所有标签都匹配才行
  selector:
    matchLabels:
      app: blogrpc-hello
  # 定义 Pod 相关数据
  template:
    metadata:
      labels:
        app: blogrpc-hello
    spec:
      # 定义容器，可以多个
      containers:
        - name: blogrpc-hello # 容器名字
          image: registry.ap-southeast-1.aliyuncs.com/yhhnamespace/blogrpc-hello:local # 镜像
          imagePullPolicy: Always
      imagePullSecrets:
        - name: my-registry-secret-1

---
apiVersion: v1
kind: Service
metadata:
  name: blogrpc-hello
spec:
  selector:
    app: blogrpc-hello
  # 默认 ClusterIP 集群内可访问，NodePort 节点可访问，LoadBalancer 负载均衡模式（需要负载均衡器才可用）
  type: ClusterIP
  ports:
    - port: 1701        # 本 Service 的端口
      targetPort: 1701  # 容器端口
#      nodePort: 31000   # 节点端口，范围固定 30000 ~ 32767

---
apiVersion: apps/v1
kind: Deployment
metadata:
  # 部署名字
  name: blogrpc-member
spec:
  replicas: 2
  # 用来查找关联的 Pod，所有标签都匹配才行
  selector:
    matchLabels:
      app: blogrpc-member
  # 定义 Pod 相关数据
  template:
    metadata:
      labels:
        app: blogrpc-member
    spec:
      # 定义容器，可以多个
      containers:
        - name: blogrpc-member # 容器名字
          image: registry.ap-southeast-1.aliyuncs.com/yhhnamespace/blogrpc-member:local # 镜像
          imagePullPolicy: Always
          env:
            - name: MONGO_MASTER_DSN
              value: "mongodb://root:root@mongo-mongodb-0.mongo-mongodb-headless.default.svc.cluster.local,mongo-mongodb-1.mongo-mongodb-headless.default.svc.cluster.local/portal-master?authSource=admin"
            - name: MONGO_MASTER_REPLSET
              value: "rs0"
      imagePullSecrets:
        - name: my-registry-secret-1

---
apiVersion: v1
kind: Service
metadata:
  name: blogrpc-member
spec:
  selector:
    app: blogrpc-member
  # 默认 ClusterIP 集群内可访问，NodePort 节点可访问，LoadBalancer 负载均衡模式（需要负载均衡器才可用）
  type: ClusterIP
  ports:
    - port: 1701        # 本 Service 的端口
      targetPort: 1701  # 容器端口
#      nodePort: 31001   # 节点端口，范围固定 30000 ~ 32767